services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8888:8080"
    networks:
      - articulate

  profiles:
    build:
      context: ./profiles
      dockerfile: Dockerfile
    ports:
      - "9092:9090"
    networks:
      - articulate


  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "9091:9090"
    networks:
      - articulate

  profiles-postgres:
    image: postgres
    container_name: "profiles-postgres-articulate"
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=profiles
    networks:
      - articulate
      - profiles-postgres-n
    volumes:
      - profiles_service_postgres:/var/lib/postgresql/data


  auth-postgres:
    image: postgres
    container_name: "auth-postgres-articulate"
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=auth
    networks:
      - articulate
      - auth-postgres-n
    volumes:
      - auth_service_postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: token_redis
    ports:
      - "6379:6379"
    networks:
      - articulate
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]

volumes:
  profiles_service_postgres:
  auth_service_postgres:
  redis-data:

networks:
  articulate:
    driver: bridge
  profiles-postgres-n:
    driver: bridge
  auth-postgres-n:
    driver: bridge
